# Description: Global configuration specification.

# This file is part of the FUME emission model.
#
# FUME is free software: you can redistribute it and/or modify it under the terms of the GNU General
# Public License as published by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# FUME is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the
# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
# Public License for more details.
#
# Information and source code can be obtained at www.fume-ep.org
#
# Copyright 2014-2023 Institute of Computer Science of the Czech Academy of Sciences, Prague, Czech Republic
# Copyright 2014-2023 Charles University, Faculty of Mathematics and Physics, Prague, Czech Republic
# Copyright 2014-2023 Czech Hydrometeorological Institute, Prague, Czech Republic
# Copyright 2014-2017 Czech Technical University in Prague, Czech Republic

################################################################################
# Common settings parameters
################################################################################
casename = string(default=mycase)
# DEPRECATED: use level in [logging]
debug = boolean(default=False)
# DEPRECATED: use sql_notices in [logging]
debug_sql = boolean(default=False)
scratch = boolean(default=False)


################################################################################
# Parameters for connecting the PostgreSQL database
################################################################################
[db_connection]

# Host name or IP address
host = string(default=localhost)
port = integer(default=5432)
user = string(default='')
password = string(default='')
database = string
conf_schema = string(default=${casename}_conf)
static_schema = string(default=${casename}_static)
source_schema = string(default=${casename}_sources)
case_schema = string(default=${casename}_case)


################################################################################
# Projection and domain parameters
################################################################################
[projection_params] 
ep_projection_srid = integer(default=4326)  # internal projection of FUME, default WGS84
projection_srid = integer(default=-1)  # output projection
# projection parameters via PROJ4 string
projection_proj4 = string(default='')

# explicit projection params (if projection_proj4 is not specified)
projection = option(default='LAMBERT','LAMBERT','LATLON','MERCATOR','EMERCATOR','POLAR','STEREO','')
p_alp = float(default=0)
p_bet = float(default=0)
p_gam = float(default=0) 
lat_central = float(default=0)
lon_central = float(default=0)

[domain]
grid_name = string(default='no_name')
grid_timezone = string(default='')
create_grid = boolean(default=yes)
nx = integer(min=1)
ny = integer(min=1)
nz = integer(min=1, default=1)
# output grid cell size in meters
delx = float()
dely = float()
delz = float(default=0)
# outpu grid  center coordinates in projection units (meters or degrees)
xorg = float()
yorg = float()
srid = integer(default=-1)


################################################################################
# Input parameters
################################################################################
[input_params]
path = string(default='input')          # defines path to data, to simplify the path definitions in this config file
static = string(default=${path})        # full path to directory with static data
sources = string(default=${path})       # full path to directory with sources data
emission_inventories = string(default='')  # full path file name for list of emission data
activity_data_inventories = string(default='')  # full path file name for list of activity data
scenarios_list = string(default='')       # full path file name for list of scenario files
validate_geometries = boolean(default=yes) # check validity and try to make valid input geometries during import
                                           # by utilizing ST_MakeValid. It can slow down input operations.
vertical_distribution_list = string(default='')       # full path file name for list of vertical distribution files
# meteorological input parameters
[[met]]
    met_path = string(default=${path}) # Directory with met files or common parent directory
    met_files = force_list(default='') # List of files or paths below met_path. May use shell patterns: *?[]
    met_type = option('ALADIN','WRF', 'RegCM', default=None)
    met_interp = boolean(default=yes) # If set no, FUME will not check whether interpolation is needed. Use if met grid is identical to FUME case grid!!!
    met_proj = string(default='')
    met_nx = integer(default=None)
    met_ny = integer(default=None)
    met_nz = integer(default=None)
    met_dx = float(default=None)
    met_xorg = float(default=None)
    met_yorg = float(default=None)
    met_itzone = integer(default = 0)
    met_tolerance = float(default = 60.0) # met timestep tolerance within the FUME timestep in seconds
    met_netcdf = boolean(default=no) # Write netcdf with the read-in meteorological data for double check?
    met_netcdf_file = string(default='./test.nc')
    met_netcdf_exclude = force_list(default=list())	
[[speciation_params]] 
    gspro_files = force_list(default=list())   # list of gspro files to be read if any. files are expected in directory ${static}/speciations/


################################################################################
# Emission inventory transformations
################################################################################
[transformations]
source = string(default='ep_transformations.conf')
cleanup = boolean(default=no)
[[chains]]
# list of transformation chains
__many__ = force_list(default=list())
[[run_chains]]
# list of transformation chains to run
__many__ = force_list(default=list())


################################################################################
# Run parameters
################################################################################
[run_params]

[[scenarios]]
all_emissions = force_list(default=list())

[[time_params]]
    # Initial datetime
    dt_init = datetime
    num_time_int = integer(min=1, default=25) # Number of time intervals
    timestep = integer(min=1, default=3600) # Time step in seconds
    itzone_out = integer(default = 0) # Output timezone number, default UTC

[[vdistribution_params]]
    apply_vdistribution = boolean(default=no) # information if to apply the vertical distributions. It must be supplied and read-in.

[[speciation_params]]
    chem_mechanisms = force_list(default=list())   # list of chemical mechanisms for which speciation split factors will be prepared in case

# definitions of the external modules
[[models]]
    models = force_list(default=list()) # list of external modules
    model_configs = force_list(default=list()) # list of external modules' configuration files (configspec format)


[[output_params]]
    save_time_series_to_db = boolean(default=no)
    model = string(default='')
    model_version = string(default='')
    output_description = string(default='')
#   DEPRECATED: use the postproc module
    outpath = string(default='.')
    write_area = boolean(default=yes) # make areafiles? 
    areafile = string(default='area_output')
    write_point = boolean(default=no) # make point files
    pointfile = string(default='point_output')
    endian = string(default='big')

#   the heights of the output model levels in meters
    model_levels = force_list(default=list())

[postproc]
    processors = force_list(default=list()) # list of output processors, see the Documentation for available processors and their settings

[[netcdfwriter]]
    undef=float(default=-9999.0)

# Configuration of the builtin PALMAreaWriter
[[palmwriter]]
    totalfile = string(default='')
    outfile_area = string(default='')
    outfile_vsrc = string(default='')
    static_driver = string(default='')
    undef=float(default=-9999.0)
    acronym = string(default='')
    author = string(default='')
    institution = string(default='')
    palm_version = string(default='6.0')
    data_content= string(default='PALM emissions created by FUME emission model')


################################################################################
# Logging parameters
################################################################################
[logging]
# global logging level:
# ERROR     Serious problems
# WARNING   Potential problems
# INFO      Standard program operation (coarse progress)
# DEBUG     Detailed program operation (parameters and values)
# TRACING   Everything even remotely usable for debugging etc.
level = option('ERROR', 'WARNING', 'INFO', 'DEBUG', 'TRACING', default='INFO')
# print SQL server notices (orthogonal to levels)
sql_notices = boolean(default=False)

# Module-specific logging levels
[[module_levels]]
    __many__ = option('ERROR', 'WARNING', 'INFO', 'DEBUG', 'TRACING')


################################################################################
# Reporting parameters
################################################################################
[reporting]
# reporting options (one, many, or all can be selected):
# RECORD     Records the information on how the data are being processed eg. files imported, data used in case, speciation profiles used etc.
# CHECK   Checks and warnings about potential problems in data
# SUM      Control sums to validate the process, this can take some amount of time for large datasets
type = force_list(default=list())
outfiles_path = string(default='./reporting/')

# Module-specific reporting options
[[module_types]]
    __many__ = force_list(default=list())
